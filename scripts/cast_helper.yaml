##################################
## Cast helper
##################################
# I am casting some images and views to our Nest Hub, but these cast
# sessions get terminated by the Hub after x amount of time.
# A workaround is to repeat casting these after a set amount of time,
# in order to not let the Google time-out kick in. These repeats are
# started without the Google "ding" sound inbetween, because something
# is already playing. It will ding before the first casting start though.
#
# Because I am casting from different automations, I've created this
# helper script which I can easily call with some variables.
cast_helper:
  alias: Cast helper
  description: "Script to cast a Lovelace view for x amount of minutes"
  icon: mdi:cast
  mode: restart
  fields:
    dashboard_path:
      name: "Dashboard path"
      description: "The URL path of the Lovelace dashboard to show."
      example: "lovelace"
      required: true
      selector:
        text:
    lovelace_view:
      name: "Lovelace view path"
      description: "The path of the Lovelace view to show."
      example: "picnic-order-closing"
      required: true
      selector:
        text:
    media_player:
      name: "Media player"
      description: "Media player to cast to."
      example: "media_player.nest_hub"
      required: true
      selector:
        entity:
          integration: cast
          domain: media_player
    runtime:
      name: "Runtime"
      description: "Duration of cast view in minutes (default: 1, max: 60)"
      example: "5"
      selector:
        number:
          min: 1
          max: 60
          mode: box
  sequence:
    - alias: "Cast view for set duration"
      repeat:
        count: "{{ runtime | int(default=1) }}"
        sequence:
          - alias: "Start casting"
            service: cast.show_lovelace_view
            data:
              entity_id: "{{ media_player }}"
              dashboard_path: "{{ dashboard_path }}"
              view_path: "{{ lovelace_view }}"
          - delay: "00:01:00"
    - service: media_player.turn_off
      target:
        entity_id: "{{ media_player }}"
