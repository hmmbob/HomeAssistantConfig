vacuum_package:
  camera:
    #############################
    ## Roborock vacuum map      #
    #############################
    - platform: xiaomi_cloud_map_extractor
      host: !secret xiaomi_vacuum_host
      token: !secret xiaomi_vacuum_token
      username: !secret xiaomi_cloud_username
      password: !secret xiaomi_cloud_password
      name: Stofzuiger
      scan_interval: 30
      draw: ["all"]
      attributes:
        - calibration_points
        - charger
        - cleaned_rooms
        - country
        - goto_path
        - goto_predicted_path
        - goto
        - ignored_obstacles_with_photo
        - ignored_obstacles
        - image
        - is_empty
        - map_name
        - no_go_areas
        - no_mopping_areas
        - obstacles_with_photo
        - obstacles
        - path
        - room_numbers
        - rooms
        - vacuum_position
        - vacuum_room_name
        - vacuum_room
        - walls
        - zones

  input_boolean:
    vacuum_enable_ask_for_cleaning:
      name: "Stofzuiger herinnering"
      icon: mdi:robot-vacuum

  input_datetime:
    vacuum_ask_for_cleaning_time:
      name: Stofzuiger herinnering tijdstip
      has_time: true
      has_date: false

  template:
    - sensor:
        - name: "Vacuum status"
          unique_id: "vacuum_status"
          state: '{{ state_attr("vacuum.rocky", "status") }}'
          icon: mdi:list-status

        - name: "Vacuum error"
          unique_id: "vacuum_error"
          icon: mdi:robot-vacuum-alert
          state: >-
            {{ iif(is_state('vacuum.rocky', 'error'), state_attr("vacuum.rocky", "error"), "No error") }}

        - name: "Vacuum battery"
          unique_id: "vacuum_battery"
          state: '{{ state_attr("vacuum.rocky", "battery_level") }}'
          device_class: "battery"
          unit_of_measurement: "%"
          icon: >-
            {% set battery_level = states('sensor.vacuum_battery')|int(default=0) %}
            {% set battery_round = (battery_level / 10)|int * 10 %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}

  automation:
    ##########################
    ## Schedule
    ##########################
    - alias: "Vacuum: Ask to have Rocky do its cleaning"
      id: vacuum_ask_to_run
      variables:
        notification_service: >
          {% if is_state("device_tracker.sm_a336b", "home") and is_state("device_tracker.sm_a526b", "home") %}notify.mobile_devices_adults
          {% elif is_state("device_tracker.sm_a336b", "home") %}notify.mobile_app_sm_a336b
          {% elif is_state("device_tracker.sm_a526b", "home") %}notify.mobile_app_sm_a526b
          {% else %}notify.bogus
          {% endif %}
      trigger:
        - platform: time
          at: input_datetime.vacuum_ask_for_cleaning_time
      condition:
        - condition: state
          entity_id: input_boolean.vacuum_enable_ask_for_cleaning
          state: "on"
        - "{{ as_timestamp(now()) - as_timestamp(states('sensor.rocky_last_clean_start')) > 86400 }}"
        - condition: state
          entity_id: input_boolean.vacation_mode_away
          state: "off"
      action:
        - alias: "Vraag of Rocky een rondje moet doen"
          service: "{{ notification_service }}"
          data:
            message: "Het is langer dan 24u geleden dat ik mijn laatste rondje heb gedaan. Zal ik gaan stofzuigen? 🧹🧹"
            title: "Rocky"
            data:
              tag: vacuum
              channel: vacuum
              actions:
                - action: "vacuum_start_yes"
                  title: "🧹 Ja, graag!"
                - action: "vacuum_start_no"
                  title: "Nee, dank je."
              ttl: 0
              priority: high
              notification_icon: mdi:robot-vacuum
        - alias: "Wacht op antwoord..."
          wait_for_trigger:
            - platform: event
              event_type: mobile_app_notification_action
              event_data:
                action: "vacuum_start_yes"
          timeout: "01:00:00"
          continue_on_timeout: false
        - alias: "Start Rocky na bevestiging"
          service: vacuum.start
          target:
            entity_id: vacuum.rocky

    - alias: "Vacuum: Drive Rocky to trash can"
      id: vacuum_drive_to_trash
      initial_state: "on"
      trigger:
        - platform: state
          entity_id: vacuum.rocky
          from: "cleaning"
          to: "returning"
          for:
            hours: 0
            minutes: 0
            seconds: 5
      condition:
        - alias: "Check if there was major cleaning done"
          condition: numeric_state
          entity_id: sensor.rocky_current_clean_area
          above: 3
      action:
        - alias: "Stop Rocky before sending goto command"
          service: vacuum.stop
          entity_id: vacuum.rocky
        - delay: "00:00:02"
        - alias: "Send Rocky to the trash can"
          service: xiaomi_miio.vacuum_goto
          data:
            entity_id: vacuum.rocky
            x_coord: "30301"
            y_coord: "29421"
        - alias: "Wait for Rocky to arrive at trash can"
          wait_for_trigger:
            - platform: state
              entity_id: vacuum.rocky
              to: "idle"
          timeout: "00:05:00"
          continue_on_timeout: false
        - alias: "Make some noise so people know I'm here"
          service: vacuum.locate
          target:
            entity_id: vacuum.rocky
        - service: notify.mobile_devices_adults
          data:
            message: "🧹 Hi! Ik moet geleegd worden en sta al bij de prullenbak. Druk na het legen op mijn 🏠 toets en ik ga terug naar mijn dock."
            title: "Rocky"
            data:
              tag: vacuum
              channel: vacuum
              actions:
                - action: "vacuum_return_to_dock"
                  title: "Keer terug naar je dock"
              ttl: 0
              priority: high
        - alias: "Wait for Rocky to return"
          wait_for_trigger:
            - platform: state
              entity_id: vacuum.rocky
              from: "idle"
              to: "returning"
          timeout: "01:00:00"
          continue_on_timeout: false
        - service: notify.mobile_devices_adults
          data:
            message: clear_notification
            data:
              tag: "vacuum"

    - alias: "Vacuum: Return to dock"
      id: vacuum_return_to_dock
      initial_state: "on"
      trigger:
        - platform: event
          event_type: mobile_app_notification_action
          event_data:
            action: "vacuum_return_to_dock"
      action:
        - service: vacuum.return_to_base
          alias: "Returning to dock"
          target:
            entity_id: vacuum.rocky

    ##########################
    ## Notifications
    ##########################
    - alias: "Vacuum: Rocky started cleaning"
      id: vacuum_notification_cleaning_started
      initial_state: "on"
      trigger:
        - platform: state
          entity_id: vacuum.rocky
          from: "docked"
          to: "cleaning"
      action:
        - service: notify.mobile_app_sm_a526b
          data:
            title: "Rocky"
            message: "Rocky doet zijn rondje! 🧹🧹"

    ##########################
    ## Capture errors
    ##########################
    - alias: "Vacuum: Rocky is in error mode"
      id: vacuum_notification_error
      initial_state: "on"
      variables:
        notification_service: >
          {% if is_state("device_tracker.sm_a336b", "home") and is_state("device_tracker.sm_a526b", "home") %}notify.mobile_devices_adults
          {% elif is_state("device_tracker.sm_a336b", "home") %}notify.mobile_app_sm_a336b
          {% elif is_state("device_tracker.sm_a526b", "home") %}notify.mobile_app_sm_a526b
          {% else %}notify.bogus
          {% endif %}
      trigger:
        - platform: state
          entity_id: sensor.vacuum_error
      condition:
        - condition: not
          conditions:
            - condition: state
              entity_id: sensor.vacuum_error
              state: "No error"
            - condition: state
              entity_id: sensor.vacuum_error
              state: "unavailable"
      action:
        - service: "{{ notification_service }}"
          data:
            title: "Rocky heeft een probleem"
            message: "Foutmelding: {{states('sensor.vacuum_error')}}"
            data:
              tag: vacuum
              channel: vacuum
              ttl: 0
              priority: high
        - service: notify.tts_woonkamer
          data:
            message: "De stofzuiger heeft een probleem. De foutmelding is: {{states('sensor.vacuum_error')}}"
        - service: persistent_notification.create
          data:
            notification_id: vacuum_error
            title: Rocky heeft een probleem
            message: "⚠ De stofzuiger heeft een probleem. De foutmelding is: {{states('sensor.vacuum_error')}}"
        - delay: "00:01:00"
        - service: media_player.turn_off
          entity_id:
            - media_player.nest_hub_woonkamer

    - alias: "Vacuum: Clear Rocky error mode"
      id: vacuum_clear_notification_error
      description: Clear notification of Rocky error
      trigger:
        - platform: state
          entity_id: sensor.vacuum_error
          to: "No error"
      action:
        - service: notify.mobile_devices_adults
          data:
            message: clear_notification
            data:
              tag: vacuum
              ttl: 0
              channel: vacuum
              priority: high
        - service: persistent_notification.dismiss
          data:
            notification_id: vacuum_error

    ##########################
    ## Disable vacuum camera when docked
    ##########################
    - alias: "Vacuum: Camera on/off"
      id: vacuum_camera_onoff
      mode: restart
      trigger:
        - platform: state
          entity_id: vacuum.rocky
        - platform: homeassistant
          event: start
      action:
        - service: >-
            {{ iif(states('vacuum.rocky') in ['unavailable', 'unknown', 'docked'], "camera.turn_off", "camera.turn_on") }}
          entity_id: camera.stofzuiger
