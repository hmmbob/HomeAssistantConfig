lights_garden_package:
  light:
    - platform: group
      name: "Verlichting tuin"
      unique_id: lampen_tuin
      entities:
        - light.tuin_wandverlichting_muren
        - light.tuin_wandverlichting_schutting

  input_boolean:
    garden_lights_override:
      name: "Tuinverlichting override"

  sensor:
    - platform: schedule_state
      name: Garden lights
      default_state: "off"
      events:
        - start: "6:30"
          end: "{{ as_timestamp(states('sensor.sun_next_rising')) }}"
          end_offset: 15
          state: "on"
          condition: "{{ (states('sensor.sun_next_rising') | as_datetime | as_local).time() > today_at('06:30').time() }}"
        - start: "{{ as_timestamp(states('sensor.sun_next_setting')) }}"
          end: "22:30"
          state: "on"
    - platform: schedule_state
      name: Tree lights
      default_state: "off"
      events:
        - start: "6:30"
          end: "{{ as_timestamp(states('sensor.sun_next_rising')) }}"
          end_offset: 30
          state: "on"
          condition: "{{ (states('sensor.sun_next_rising') | as_datetime | as_local).time() > today_at('06:30').time() }}"
        - start: "{{ as_timestamp(states('sensor.sun_next_setting')) }}"
          start_offset: -30
          end: "22:30"
          state: "on"

  automation:
    - id: garden_turn_on
      alias: "Zet de tuinverlichting aan of uit"
      mode: single
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: sensor.garden_lights
        - trigger: homeassistant
          event: start
        - trigger: event
          event_type: automation_reloaded
      conditions:
        - alias: "Do we have a valid state"
          condition: template
          value_template: "{{ states('sensor.garden_lights') not in ['unknown','unavailable','none'] }}"
        - alias: "Only continue if not overridden"
          condition: state
          entity_id: input_boolean.garden_lights_override
          state: "off"
      actions:
        - action: homeassistant.turn_{{ states('sensor.garden_lights') }}
          target:
            entity_id:
              - light.verlichting_tuin

    - id: garden_turn_on_tree_lights
      alias: "Zet de boomverlichting aan of uit"
      mode: single
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: sensor.tree_lights
        - trigger: homeassistant
          event: start
        - trigger: event
          event_type: automation_reloaded
      conditions:
        - alias: "Do we have a valid state"
          condition: template
          value_template: "{{ states('sensor.tree_lights') not in ['unknown','unavailable','none'] }}"
        - alias: "Only continue if not overridden"
          condition: state
          entity_id: input_boolean.garden_lights_override
          state: "off"
      actions:
        - action: homeassistant.turn_{{ states('sensor.tree_lights') }}
          target:
            entity_id:
              - light.tuin_spot_boom

    - id: garden_turn_on_coming_home
      alias: "Zet de tuinverlichting aan als ik thuis kom"
      mode: single
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: binary_sensor.poort_contact
          from: "off"
          to: "on"
      conditions:
        - alias: "Are the lights off?"
          condition: state
          entity_id: light.verlichting_tuin
          state: "off"
        - alias: "Is the sun down?"
          condition: state
          entity_id: sun.sun
          state: "below_horizon"
      actions:
        - action: input_boolean.turn_on
          target:
            entity_id: input_boolean.garden_lights_override
        - action: homeassistant.turn_on
          target:
            entity_id: light.verlichting_tuin
        - delay: "00:03:00"
        - action: input_boolean.turn_off
          target:
            entity_id: input_boolean.garden_lights_override
        - action: automation.trigger
          target:
            entity_id: automation.lights_garden_turn_on

    - id: backgate_alert
      alias: "Waarschuw als iemand door de poort komt of het fietsenhok opent"
      description: "Alert when someone enters the backgate of our garden or opens the bike shed"
      mode: single
      max_exceeded: silent
      trace:
        stored_traces: 20
      triggers:
        - trigger: state
          entity_id:
            - binary_sensor.poort_contact
            - binary_sensor.fietsenhok_contact
          from: "off"
          to: "on"
      actions:
        - alias: "Turn on speaker"
          action: switch.turn_on
          target:
            entity_id: switch.alarmspeaker_alarm
        # Sometimes the trigger fires multiple times in short period. The next step
        # prevents multiple alerts in combination with 'mode: single' & 'max_exceeded: silent'
        - alias: "Do nothing for 1 minute to prevent bouncing triggers"
          delay: "00:01:00"

    - id: "achtertuin_stream_to_kiosk"
      alias: Stream de achtertuin naar de kiosks
      mode: single
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: binary_sensor.achtertuin_persoon
          from: "off"
          to: "on"
      actions:
        - action: browser_mod.popup
          data:
            dismissable: true
            autoclose: true
            browser_id:
              - kiosk1
              - kiosk2
            timeout: 90000
            size: fullscreen
            content:
              type: custom:advanced-camera-card
              cameras:
                - camera_entity: camera.achtertuin_vloeiend
        - action: number.set_value
          data:
            value: "255"
          target:
            entity_id:
              - number.kiosk1_schermhelderheid
              - number.kiosk2_schermhelderheid
        - alias: "Do nothing for 92 seconds to prevent bouncing triggers"
          delay: "00:01:32"
