trash_package:
  input_boolean:
    notify_trash:
      name: "Push-meldingen over afval"
      icon: mdi:message-bulleted
    notify_trash_voice:
      name: "Voice-meldingen over afval"
      icon: mdi:account-voice
    trash_outside:
      name: "Afval naar buiten gebracht"

  input_datetime:
    time_trash_warning_today:
      name: Melding afval vandaag
      has_time: true
    time_trash_warning_tomorrow:
      name: Melding afval morgen
      has_time: true

  input_text:
    trash_url_gft:
      name: Trash URL GFT
      initial: !secret image_url_gft

    trash_url_papier:
      name: Trash URL papier
      initial: !secret image_url_oudpapier

    trash_url_pbd:
      name: Trash URL plastic
      initial: !secret image_url_plastic

    trash_url_pbdpapier:
      name: Trash URL plastic en papier
      initial: !secret image_url_plasticpapier
    trash_url_papierpbd:
      name: Trash URL papier en plastic
      initial: !secret image_url_plasticpapier

    trash_url_restafval:
      name: Trash URL restafval
      initial: !secret image_url_restafval

  template:
    sensor:
      - name: Afvalinfo volgende inzameling en datum
        unique_id: afvalinfo_home_next_trash_type_and_date
        state: >-
          {% set ns = namespace(minimum=365) %}
          {% set list = ['gft', 'pbd', 'papier', 'restafval'] %}
          {% set friendly_list = ['GFT', 'PBD', 'Oud Papier', 'Restafval'] %}
          {%- for l in list %}
            {%- set days = state_attr('sensor.afvalinfo_home_' ~l, 'days_until_collection_date')%}
            {%- if days != None and days < ns.minimum %}
              {%- set ns.minimum = days %}
            {%- endif %}
          {%- endfor %}
          {%- for l in list %}
            {%- set days = state_attr('sensor.afvalinfo_home_' ~l, 'days_until_collection_date')%}
            {%- if days == ns.minimum %}
              {{friendly_list[loop.index0]}} Â· {{ states('sensor.afvalinfo_home_' ~l) }}
            {%- endif %}
          {%- endfor %}

  automation:
    ##########################
    ## Trash notifications
    ##########################
    - alias: "Verstuur melding welk afval opgehaald wordt"
      id: afval_meldingen
      triggers:
        - trigger: time
          at: input_datetime.time_trash_warning_today
          id: vandaag
        - trigger: time
          at: input_datetime.time_trash_warning_tomorrow
          id: morgen
      variables:
        sensor: "sensor.afvalinfo_home_{{ trigger.id }}"
        trash_descr:
          PBD: "plastic"
          GFT: "GFT"
          Restafval: "restafval"
          Papier: "oud papier"
          "PBD, Papier": "plastic en oud papier"
          "Papier, PBD": "plastic en oud papier"
        afval: >
          {{ trash_descr.get(states(sensor), "onbekend") }}
      conditions:
        - alias: "Do we want notifications?"
          condition: state
          entity_id: input_boolean.notify_trash
          state: "on"
        - alias: "Do we have a valid state"
          condition: template
          value_template: "{{ states(sensor) not in ['unknown','unavailable','none','geen'] }}"
      actions:
        - if:
            - '{{trigger.id == "morgen" }}'
          then:
            - alias: "New round of notifications, so resetting helper for next round"
              action: input_boolean.turn_off
              target:
                entity_id: input_boolean.trash_outside
        - if:
            - '{{trigger.id == "vandaag" }}'
            - alias: "Check if trash is outside already"
              condition: state
              entity_id: input_boolean.trash_outside
              state: "on"
          then:
            - stop: "Stopping notification sequence as trash is already outside"
          else:
            - alias: "Sending push notification"
              action: notify.mobile_app_sm_a556b
              data:
                title: "Afvalinzameling"
                message: "{{ trigger.id | capitalize }} wordt het {{ afval }} opgehaald."
                data:
                  tag: "notification-trash"
                  notification_icon: mdi:delete
                  actions:
                    - action: "trash_outside"
                      title: "Jep, staat buiten!"
                  ttl: 0
                  priority: high
            - alias: "Check if TTS should be played"
              condition: state
              entity_id: input_boolean.notify_trash_voice
              state: "on"
            - action: media_player.volume_set
              data:
                entity_id: media_player.kiosk1_fkb
                volume_level: 0.9
            - alias: "Play TTS"
              action: tts.microsoft_say
              entity_id: media_player.kiosk1_fkb
              data:
                message: "{{ trigger.id }} wordt het {{ afval }} opgehaald."
            - action: browser_mod.popup
              data:
                dismissable: true
                autoclose: false
                browser_id:
                  - kiosk1
                  - kiosk2
                timeout: 60000
                size: fullscreen
                content:
                  type: picture
                  image: "{{ states('input_text.trash_url_' ~ states(sensor).replace(' ', '')) }}"
                card_mod:
                  style:
                    ha-dialog$: |
                      div.mdc-dialog .mdc-dialog__container .mdc-dialog__surface {
                        background: black !important;
                        border: none !important;
                        border-style: solid !important;
                        border-color: black !important;
                      }

    - alias: "Verwerk dat het afval buitengezet is"
      id: afval_process_reminder_status
      triggers:
        - trigger: event
          event_type: mobile_app_notification_action
          event_data:
            action: "trash_outside"
      actions:
        - action: input_boolean.turn_on
          target:
            entity_id: input_boolean.trash_outside
