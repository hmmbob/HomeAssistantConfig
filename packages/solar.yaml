solar_package:
  rest_command:
    update_pvoutput:
      url: https://pvoutput.org/service/r2/addstatus.jsp
      method: post
      content_type: "application/x-www-form-urlencoded"
      headers:
        X-Pvoutput-Apikey: !secret pvoutput_api_key
        X-Pvoutput-SystemId: !secret pvoutput_system_id
      payload: >-
        d={{now().strftime("%Y%m%d")}}
        &t={{now().strftime("%H:%M")}}
        &v1={{(states('sensor.today_s_pv_generation')|float(0))*1000}}
        &v2={{(states('sensor.pv_power')|float(0))|round(0)}}
        &v5={{state_attr('weather.knmi_home', 'temperature')|float(0)}}
        &v6={{states('sensor.on_grid_l1_voltage')|float(0)}}
      # &v4={{((states('sensor.filtered_netto_consumption')|float(0)) * 1000)|round(0)}}

  sensor:
    # Filtered netto consumption. Consumption is in kW
    - platform: filter
      name: "Filtered netto consumption"
      entity_id: sensor.netto_consumption
      filters:
        - filter: outlier
          window_size: 5
          radius: 1.5
        - filter: time_simple_moving_average
          window_size: "00:00:30"
          precision: 3
        - filter: range
          lower_bound: 0

  template:
    - sensor:
        # netto consumption = solar_yield - solar_returned + grid_consumption
        - name: "Netto consumption"
          unit_of_measurement: "kW"
          state: >-
            {{ (((states('sensor.pv_power') | float(0)) / 1000 )
                  - (states('sensor.dsmr_reading_electricity_currently_returned') | float(0))
                  + (states('sensor.dsmr_reading_electricity_currently_delivered') | float(0))) 
                  | round(3) }}

  automation:
    - id: solar_upload_to_pvoutput
      alias: "Power: PVOutput uploader"
      description: Upload values to PVOutput
      trigger:
        - platform: time_pattern
          minutes: /5
          seconds: "0"
      condition:
        - condition: state
          entity_id: sensor.work_mode
          state: "Normal"
      action:
        - service: rest_command.update_pvoutput
          data: {}
      mode: single
