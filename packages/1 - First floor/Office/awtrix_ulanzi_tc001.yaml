awtrix_package:
  mqtt:
    - number:
        name: Brightness
        unique_id: awtrix_6caff8_brightness
        min: 1
        max: 255
        state_topic: awtrix_6caff8/stats
        value_template: "{{ value_json.bri }}"
        availability_topic: awtrix_6caff8/10521c6caff8/avty_t
        command_topic: awtrix_6caff8/settings
        command_template: ' { "BRI": {{ value }} } '
        device:
          identifiers: 10521c6caff8
          name: awtrix_6caff8
          manufacturer: Blueforcer
          model: AWTRIX Light

  automation:
    ##########################
    ## System functions
    ##########################
    - id: awtrix_turn_on_or_off
      alias: "Zet Awtrix aan of uit  ðŸŒ›"
      description: "Turn off the Awtrix screen at 20:30 and turn it back on at 08:00"
      triggers:
        - alias: "Ga sowieso uit om 20u30"
          trigger: time
          at: "20:30:00"
          id: "turn_off"
        - alias: "Ga weer aan om 8u"
          trigger: time
          at: "08:00:00"
          id: "turn_on"
      condition: []
      actions:
        - action: homeassistant.{{trigger.id}}
          data:
            entity_id:
              - light.awtrix_6caff8_matrix

    - id: awtrix_switch_between_clock_and_apps
      alias: "Schakel Awtrix tussen de klok en de apps"
      description: "Set Awtrix to clock only by pressing the middle button or when I turn off my monitor"
      mode: queued
      triggers:
        - trigger: state
          entity_id: binary_sensor.awtrix_6caff8_button_select
          to: "on"
          id: "toggle"
        - trigger: numeric_state
          entity_id: sensor.bureau_kantoor_power
          above: 25
          id: "turn_on"
        - trigger: numeric_state
          entity_id: sensor.bureau_kantoor_power
          below: 25
          for: "00:05:00"
          id: "turn_off"
      condition: []
      actions:
        choose:
          - alias: "Do we need to turn on Awtrix?"
            conditions:
              - "{{ trigger.id == 'turn_on' }}"
            sequence:
              - alias: "Start transition and set time color to white again"
                action: mqtt.publish
                data:
                  topic: awtrix_6caff8/settings
                  payload: '{ "WD": true, "TMODE":"1", "TIME_COL": [255,255,255], "ABRI": true, "ATRANS": true }'
          - alias: "Do we need to turn off Awtrix?"
            conditions:
              - "{{ trigger.id == 'turn_off' }}"
            sequence:
              - alias: "Swith to time"
                action: mqtt.publish
                data:
                  topic: awtrix_6caff8/switch
                  payload: '{"name":"Time"}'
              - alias: "Set low brightness and red color and fix to time app"
                action: mqtt.publish
                data:
                  topic: awtrix_6caff8/settings
                  payload: '{ "WD": false, "TMODE":"0", "TIME_COL": [255,0,0], "BRI": 1, "ABRI": false, "ATRANS": false }'
          - alias: "Do we need to toggle Awtrix?"
            conditions:
              - "{{ trigger.id == 'toggle' }}"
            sequence:
              - if:
                  - alias: "Transition is on, so we are in day mode: toggle to night mode"
                    condition: state
                    entity_id: switch.awtrix_6caff8_transition
                    state: "on"
                then:
                  - alias: "Swith to time"
                    action: mqtt.publish
                    data:
                      topic: awtrix_6caff8/switch
                      payload: '{"name":"Time"}'
                  - alias: "Set low brightness and red color and fix to time app"
                    action: mqtt.publish
                    data:
                      topic: awtrix_6caff8/settings
                      payload: '{ "WD": false, "TMODE":"0", "TIME_COL": [255,0,0], "BRI": 1, "ABRI": false, "ATRANS": false }'
                else:
                  - alias: "Start transition and set time color to white again"
                    action: mqtt.publish
                    data:
                      topic: awtrix_6caff8/settings
                      payload: '{ "WD": true, "TMODE":"1", "TIME_COL": [255,255,255], "ABRI": true, "ATRANS": true }'

    - id: awtrix_start_custom_apps_on_reboot
      alias: "Start alle Awtrix apps na een reboot"
      description: "Start custom apps on Awtrix reboot"
      mode: single
      triggers:
        - trigger: state
          entity_id: switch.awtrix_6caff8_transition
          from: "off"
          to: "on"
      condition: []
      actions:
        - action: automation.trigger
          target:
            entity_id:
              - automation.awtrix_send_outside_temperature_to_awtrix
        - delay: 5
        - action: automation.trigger
          target:
            entity_id:
              - automation.awtrix_solar_energy_monitor
        - delay: 5
        - action: automation.trigger
          target:
            entity_id:
              - automation.awtrix_send_today_s_energy_production_to_awtrix
        - delay: 5
        - action: automation.trigger
          target:
            entity_id:
              - automation.awtrix_send_ev_battery_level

    ##########################
    ## Custom apps
    ##########################
    - id: awtrix_temperature
      alias: "Stuur de buitentemperatuur naar Awtrix"
      description: "Send outside temperature to Awtrix"
      mode: queued
      triggers:
        - trigger: state
          entity_id: sensor.knmi_temperatuur
      condition: []
      actions:
        - action: mqtt.publish
          data:
            topic: awtrix_6caff8/custom/outside_temp
            payload: ' { "text": "{{ states(''sensor.knmi_temperatuur'') }}Â°C", "icon": "56840", "color": "#f21f1f", "duration": 7 } '

    - id: awtrix_production
      alias: "Stuur vandaags productie van de zonnepanelen naar Awtrix"
      description: "Awtrix: Send today's energy production to Awtrix"
      mode: queued
      triggers:
        - trigger: state
          entity_id: sensor.today_s_pv_generation
      condition: []
      actions:
        - action: mqtt.publish
          data:
            topic: awtrix_6caff8/custom/production_today
            payload: ' { "text": "{{ states(''sensor.todays_total_production_preserved'') }} kWh", "icon": "52456", "color": "#7bf21f", "duration": 7} '

    - id: awtrix_current_production
      alias: "Stuur de huidige opbrengst van de zonnepanelen naar Awtrix"
      description: This will show the current solar energy received.
      mode: queued
      variables:
        device_topic: awtrix_6caff8/custom/current_production
        power_sensor: sensor.pv_power
        power_level: "{{ states[power_sensor].state | int(0) | abs }}"
        threshold_low: 1500
        threshold_high: 2500
        power_level_icon: >-
          {%- if power_level > threshold_high %}{{54156}}{%- endif %}
          {%- if (power_level <= threshold_high) and (power_level > threshold_low) %}{{50557}}{%- endif %}
          {%- if power_level <= threshold_low %}{{50546}}{%- endif %}
        power_level_color: >-
          {%- if power_level > threshold_high %}{{"#04FE04"}}{%- endif %}
          {%- if (power_level <= threshold_high) and (power_level > threshold_low) %}{{"#FCFEFC"}}{%- endif %}
          {%- if power_level <= threshold_low %}{{"#FF4E1A"}}{%- endif %}
        power_level_text: >-
          {%- if power_level > 1000  %}{{ ((power_level | float(default=0)) / 1000) | round(1)}} kW{%- else %}{{power_level | round(0)}} W{%- endif %}
        skip_if_zero_watts: true
        skip_during_night_hours: true
        payload: >-
          {"icon":"{{ power_level_icon }}", "text": "{{ power_level_text }}",  "color": "{{ power_level_color }}"}
        night_start: >-
          {{ as_timestamp(state_attr('sun.sun','next_setting'))| timestamp_custom("%H:%M:%S")}}
        night_end: >-
          {{ as_timestamp(state_attr('sun.sun','next_rising'))| timestamp_custom("%H:%M:%S")}}
      triggers:
        - trigger: time_pattern
          minutes: "/5"
      condition: []
      actions:
        - choose:
            - alias: "Skipping if it is night time"
              conditions:
                - condition: template
                  value_template: >
                    {% set now_time = now().strftime("%H:%M") %}
                    {% set night_start = night_start %}
                    {% set night_end = night_end %}
                    {{ (skip_during_night_hours and ((now_time < night_end) or (now_time > night_start))) or (skip_if_zero_watts and (power_level == 0)) }}
              sequence:
                - action: mqtt.publish
                  data:
                    topic: "{{ device_topic }}"
                    payload: "{}"
            - alias: "Not skipping when it is day time"
              conditions:
                - condition: template
                  value_template: >
                    {% set now_time = now().strftime("%H:%M") %}
                    {% set night_start = night_start %}
                    {% set night_end = night_end %}
                    {{ not((skip_during_night_hours and ((now_time < night_end) or (now_time > night_start))) or (skip_if_zero_watts and (power_level == 0))) }}
              sequence:
                - action: mqtt.publish
                  data:
                    topic: "{{ device_topic }}"
                    payload: >
                      {{ payload }}

    - id: awtrix_ev_battery
      alias: "Stuur het batterijniveau van de auto naar Awtrix"
      description: "Awtrix: Send the battery level of my EV to Awtrix"
      mode: queued
      variables:
        threshold_low: 30
        threshold_high: 60
        power_level: "{{ states('sensor.tucson_ev_battery_level') | int(default=0) }}"
        power_level_color: >-
          {%- if power_level > threshold_high %}{{"#04FE04"}}{%- endif %}
          {%- if (power_level <= threshold_high) and (power_level > threshold_low) %}{{"#FCFEFC"}}{%- endif %}
          {%- if power_level <= threshold_low %}{{"#FF4E1A"}}{%- endif %}
      triggers:
        - trigger: state
          entity_id: sensor.tucson_ev_battery_level
      condition: []
      actions:
        - action: mqtt.publish
          data:
            topic: awtrix_6caff8/custom/ev_battery
            payload: ' { "text": "{{ states(''sensor.tucson_ev_battery_level'') }} %", "icon": "2817", "color": "{{ power_level_color }}", "duration": 7} '
