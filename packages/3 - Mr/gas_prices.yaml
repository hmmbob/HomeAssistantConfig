gas_prices_package:
  input_text:
    # I am using this workarond to hide sensitive information.
    # As templates cannot handle secrets, but you can set these input_text items
    # with !secret, so in this way the sensitive data is obfuscated. I don't mind
    # having these in my HA instance, I just don't want them on Github.
    woonplaats:
      name: Woonplaats
      initial: !secret woonplaats
    esso_adres:
      name: Esso adres
      initial: !secret esso_adres

  multiscrape:
    ##########################
    ## Gas prices sensor
    ##
    ## Just scraping the Tinq website page for the needed information
    ## URL is to their site: https://www.tinq.nl/tankstations/utrecht-atoomweg (random example)
    ## Using !secret as to somewhat keep some privacy for the exact location I scrape.
    ##########################
    - name: gasprices
      resource: !secret scrape_url_tinq
      scan_interval: 3594 # little bit less than 1hr
      sensor:
        - unique_id: benzine
          name: "Benzine"
          icon: mdi:gas-station
          select: ".taxonomy-term-Euro95 .field--name-field-prices-price-pump"
          attribute: "content"
          device_class: monetary
          unit_of_measurement: EUR

    - name: gasprices_multi
      resource: https://www.tankplanner.nl/api/v1/price/euro95/
      scan_interval: 3594 # little bit less than 1hr
      sensor:
        - unique_id: benzine_greenpoint
          name: "Benzine Greenpoint"
          icon: mdi:gas-station
          device_class: monetary
          unit_of_measurement: EUR
          value_template: >-
            {% set woonplaats = states('input_text.woonplaats') %}
            {{ (value_json | selectattr('town', 'eq', woonplaats) | selectattr('organization', 'eq', 'Greenpoint') | list | first).price }}
        - unique_id: benzine_esso
          name: "Benzine Esso"
          icon: mdi:gas-station
          device_class: monetary
          unit_of_measurement: EUR
          value_template: >-
            {% set woonplaats = states('input_text.woonplaats') %}
            {% set address = states('input_text.esso_adres') %}
            {{ (value_json | selectattr('town', 'eq', woonplaats) | selectattr('address', 'eq', address) | list | first).price }}
        - unique_id: benzine_Tinq
          name: "Benzine TinQ"
          icon: mdi:gas-station
          device_class: monetary
          unit_of_measurement: EUR
          value_template: >-
            {% set woonplaats = states('input_text.woonplaats') %}
            {{ (value_json | selectattr('town', 'eq', woonplaats) | selectattr('organization', 'eq', 'TinQ') | list | first).price }}

  automation:
    ##########################
    ## Gasprice notifications
    ##########################
    - id: notification_benzine_price_changed
      alias: "Notifications: Benzine price changed"
      trigger:
        - platform: state
          entity_id: sensor.benzine
          not_from:
            - "unknown"
            - "unavailable"
            - "none"
          not_to:
            - "unknown"
            - "unavailable"
            - "none"
      condition:
        - alias: "Check if price really changed"
          condition: template
          value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
      action:
        - service: notify.mobile_app_sm_a526b
          data:
            title: >-
              {{ iif(trigger.to_state.state < trigger.from_state.state, "Benzine wordt goedkoper", "Benzine wordt duurder") }}
            message: >-
              â›½ De benzineprijs is {{ iif(trigger.to_state.state < trigger.from_state.state,  "gezakt.", "gestegen.") }}
              Nieuwe prijs: {{ trigger.to_state.state }}. 
              Oude prijs: {{ trigger.from_state.state }}.
            data:
              tag: benzine
              channel: benzine
              notification_icon: mdi:gas-station
