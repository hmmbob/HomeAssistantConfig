attic_pubercave_package:
  sonoff:
    username: !secret sonoff_username
    password: !secret sonoff_password

  input_boolean:
    enable_game_mode:
      name: Game mode
      icon: mdi:sony-playstation
    notify_power_use_attic:
      name: Waarschuwing leeslamp & pubercave
      icon: mdi:lightbulb-on-outline

  input_datetime:
    time_leeslampje_attic:
      name: Leeslampje zolder
      has_time: true

  sensor:
    - platform: history_stats
      name: Pubercave ON today
      entity_id: binary_sensor.is_pubercave_on
      state: "on"
      type: time
      start: "{{ now().replace(hour=0, minute=0, second=0) }}"
      end: "{{ now() }}"

  template:
    - binary_sensor:
        - name: "Is pubercave on"
          unique_id: is_pubercave_on
          state: "{{ states('sensor.pubercave_power') | int(default=0) > 80 }}"

  automation:
    ##########################
    ## Turn on gaming mode if PS4 starts
    ##########################
    - id: turn_on_gaming_mode_when_ps4_starts
      alias: "Lights: Game mode als PS4 aan gaat"
      mode: single
      max_exceeded: silent
      trigger:
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          above: 80
          id: "on"
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          below: 30
          id: "off"
      condition:
        - condition: state
          entity_id: input_boolean.enable_game_mode
          state: "on"
        - condition: time
          after: "07:30:00"
          before: "21:00:00"
      action:
        - alias: "Choose based on trigger ID"
          choose:
            - conditions:
                condition: trigger
                id: "on"
              sequence:
                - alias: "Turn on LED strip"
                  service: light.turn_on
                  target:
                    entity_id: light.sonoff_l1
                  data:
                    effect: RGB Gradient
                - alias: "Close cover for darkness"
                  service: cover.close_cover
                  target:
                    entity_id: cover.zolder
            - conditions:
                condition: trigger
                id: "off"
              sequence:
                - alias: "Turn off LED strip"
                  service: light.turn_off
                  target:
                    entity_id: light.sonoff_l1
                - alias: "Only open cover again between set times"
                  condition: time
                  after: input_datetime.time_cover_up
                  before: input_datetime.time_cover_down
                - alias: "Open cover again"
                  service: cover.open_cover
                  target:
                    entity_id: cover.zolder

    ##########################
    ## Warnings on power usage on kid's bedroom
    ##########################

    # Reading light: the kid shouldn't be reading after bedtime, so we track
    # the power usage of his bedside light with an always on switch
    # Pubercave: mancave for the adolescent kid. It has a TV and PS4 that obviously
    # shouldn't be on after bedtime... So let's trigger a notification if it is :)
    - id: warn_power_usage_after_bedtime_attic
      alias: "Notifications: Power usage op zolder na bedtijd"
      mode: queued
      trigger:
        - platform: numeric_state
          entity_id: sensor.leeslampje_zolder_power
          above: 1
          for:
            minutes: 2
          id: Leeslampje
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          above: 25
          id: Pubercave
      condition:
        - condition: state
          entity_id: input_boolean.notify_power_use_attic
          state: "on"
        - condition: time
          after: input_datetime.time_leeslampje_attic
      action:
        - service: notify.mobile_devices_adults
          data:
            title: "{{ trigger.id }}"
            message: >-
              {% if trigger.id == "Leeslampje" %}
                Het lampje op zolder staat nog aan... ({{ now().strftime('%H:%M') }}).
              {% else %}
                De TV of PS4 op zolder staat nog aan... ({{ now().strftime('%H:%M') }}).
              {% endif %}
            data:
              tag: "{{ trigger.id }}"
              icon_url: "https://raw.githubusercontent.com/home-assistant/assets/master/logo/logo-pretty.png"

    # Because the switch is always on and only used for power tracking,
    # we need another way to track this switch in the logbook. We use
    # 25 watts as crossover point, because the PS4 sometimes charges
    # the controllers and thus consumes a bit of power.
    - id: power_logging_attic
      alias: "Power: Logging pubercave en leeslampje"
      mode: queued
      trigger:
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          above: 25
          id: pubercave
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          below: 25
          id: pubercave
        - platform: numeric_state
          entity_id: sensor.leeslampje_zolder_power
          above: 3
          id: leeslampje
        - platform: numeric_state
          entity_id: sensor.leeslampje_zolder_power
          below: 1
          id: leeslampje
      action:
        - choose:
            - conditions:
                condition: trigger
                id: pubercave
              sequence:
                - service: logbook.log
                  data:
                    name: Pubercave zolder
                    entity_id: sensor.pubercave_power
                    message: >-
                      {{ iif(states('sensor.pubercave_power') | float > 25, "is aan", "is uit" )}}
            - conditions:
                condition: trigger
                id: leeslampje
              sequence:
                - service: logbook.log
                  data:
                    name: Leeslampje zolder
                    entity_id: sensor.leeslampje_zolder_power
                    message: >-
                      {{ iif(states('sensor.pubercave_power') | float > 3, "is aan", "is uit" )}}
