attic_pubercave_package:
  binary_sensor:
    - platform: ping
      host: !secret pubercave_pc_ip
      name: "Pubercave PC"
      count: 3
      scan_interval: 60

  input_boolean:
    enable_game_mode:
      name: Game mode
      icon: mdi:sony-playstation
    notify_power_use_attic:
      name: Waarschuwing leeslamp & pubercave
      icon: mdi:lightbulb-on-outline

  input_datetime:
    time_leeslampje_attic:
      name: Leeslampje zolder
      has_time: true

  sensor:
    - platform: history_stats
      name: Pubercave PC ON today
      entity_id: binary_sensor.pubercave_pc
      state: "on"
      type: time
      start: "{{ now().replace(hour=0, minute=0, second=0) }}"
      end: "{{ now() }}"
    - platform: history_stats
      name: Pubercave TV ON today
      entity_id: binary_sensor.is_pubercave_tv_on
      state: "on"
      type: time
      start: "{{ now().replace(hour=0, minute=0, second=0) }}"
      end: "{{ now() }}"

  template:
    - binary_sensor:
        - name: "Is pubercave TV on"
          unique_id: is_pubercave_TV_on
          state: "{{ states('sensor.pubercave_power') | int(default=0) > 20 }}"
        - name: "Is pubercave leeslampje on"
          unique_id: is_pubercave_leeslampje_on
          state: "{{ states('sensor.leeslampje_zolder_power') | int(default=0) > 3 }}"
        - name: "Is pubercave PC on"
          unique_id: is_pubercave_pc_on
          state: "{{ states('binary_sensor.pubercave_pc') }}"

  automation:
    - id: warn_pc_time_over_pubercave
      alias: "Notifications: Pubercave PC time over"
      mode: queued
      trigger:
        - platform: time
          id: "weekday"
          at:
            - "20:45:00"
        - platform: time
          id: "weekend"
          at:
            - "21:30:00"
      condition:
        - condition: state
          alias: "Check if PC is on"
          entity_id: binary_sensor.pubercave_pc
          state: "on"
        - or:
            - and:
                - '{{ trigger.id == "weekday" }}'
                - condition: time
                  weekday:
                    - mon
                    - tue
                    - wed
                    - thu
                    - fri
            - and:
                - '{{ trigger.id == "weekend" }}'
                - condition: time
                  weekday:
                    - sat
                    - sun
      action:
        - service: scene.create
          data:
            scene_id: snapshot_pubercave
            snapshot_entities:
              - light.sonoff_l1
        - service: light.turn_on
          target:
            entity_id: light.sonoff_l1
          data:
            color_name: red
        - delay:
            seconds: 1
            milliseconds: 200
        - repeat:
            count: 5
            sequence:
              - service: light.toggle
                data: {}
                target:
                  entity_id: light.sonoff_l1
              - delay:
                  seconds: 1
                  milliseconds: 200
              - service: light.toggle
                data: {}
                target:
                  entity_id: light.sonoff_l1
              - delay:
                  seconds: 1
                  milliseconds: 200
        - service: scene.turn_on
          data:
            entity_id: scene.snapshot_pubercave

    ##########################
    ## Warnings on power usage on kid's bedroom
    ##########################

    # Reading light: the kid shouldn't be reading after bedtime, so we track
    # the power usage of his bedside light with an always on switch
    # Pubercave: mancave for the adolescent kid. It has a TV that obviously
    # shouldn't be on after bedtime... So let's trigger a notification if it is :)
    - id: warn_power_usage_after_bedtime_attic
      alias: "Notifications: Power usage op zolder na bedtijd"
      mode: queued
      trigger:
        - platform: numeric_state
          entity_id: sensor.leeslampje_zolder_power
          above: 3
          for:
            minutes: 2
          id: Leeslampje
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          above: 25
          id: TV
      condition:
        - condition: state
          entity_id: input_boolean.notify_power_use_attic
          state: "on"
        - condition: time
          after: input_datetime.time_leeslampje_attic
      action:
        - service: notify.mobile_devices_adults
          data:
            title: "{{ trigger.id }}"
            message: >-
              {% if trigger.id == "Leeslampje" %}
                Het lampje op zolder staat nog aan... ({{ now().strftime('%H:%M') }}).
              {% else %}
                De TV op zolder staat nog aan... ({{ now().strftime('%H:%M') }}).
              {% endif %}
            data:
              tag: "{{ trigger.id }}"
              icon_url: "https://raw.githubusercontent.com/home-assistant/assets/master/logo/logo-pretty.png"

    # Because the switch is always on and only used for power tracking,
    # we need another way to track this switch in the logbook. We use
    # 25 watts as crossover point, because the PS4 sometimes charges
    # the controllers and thus consumes a bit of power.
    - id: power_logging_attic
      alias: "Power: Logging pubercave en leeslampje"
      mode: queued
      trigger:
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          above: 25
          id: pubercave
        - platform: numeric_state
          entity_id: sensor.pubercave_power
          below: 25
          id: pubercave
        - platform: numeric_state
          entity_id: sensor.leeslampje_zolder_power
          above: 3
          id: leeslampje
        - platform: numeric_state
          entity_id: sensor.leeslampje_zolder_power
          below: 3
          id: leeslampje
      action:
        - choose:
            - conditions:
                condition: trigger
                id: pubercave
              sequence:
                - service: logbook.log
                  data:
                    name: Pubercave zolder
                    entity_id: sensor.pubercave_power
                    message: >-
                      {{ iif(states('sensor.pubercave_power') | float(0) > 25, "is aan", "is uit" )}}
            - conditions:
                condition: trigger
                id: leeslampje
              sequence:
                - service: logbook.log
                  data:
                    name: Leeslampje zolder
                    entity_id: sensor.leeslampje_zolder_power
                    message: >-
                      {{ iif(states('sensor.pubercave_power') | float(0) > 3, "is aan", "is uit" )}}
