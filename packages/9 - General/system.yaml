system_package:
  template:
    ##############################
    ## Night template sensors   #
    ##############################
    - sensor:
        - name: "Nightstate"
          unique_id: nightstate
          state: "{{ iif(is_state('sun.sun', 'below_horizon'), 1, 0) }}"

  automation:
    ##########################
    ## Set theme
    ##########################
    - id: set_theme
      alias: "Stel thema in"
      triggers:
        - trigger: homeassistant
          event: start
        - trigger: state
          entity_id: sun.sun
          to: above_horizon
        - trigger: state
          entity_id: sun.sun
          to: below_horizon
      actions:
        - if: "{{ is_state('sun.sun', 'below_horizon')}}"
          then:
            - action: frontend.set_theme
              data:
                name: "Hmmbob Google Dark Theme"
          else:
            - action: frontend.set_theme
              data:
                name: "Hmmbob Google Light Theme"

    # Automation to set the date of the "end field" in the UI to the same value as the "start"
    - id: ui_set_end_date
      alias: "Stel de datum van het eindveld op dezelfde dag in als de begindatum"
      description: "System: Fix the UI - set date of end field to date of start field"
      triggers:
        - trigger: state
          entity_id: input_datetime.solar_pv_off_start
          variables:
            end_entity_id: input_datetime.solar_pv_off_end
      actions:
        - alias: Set date of desired end field
          action: input_datetime.set_datetime
          target:
            entity_id: "{{ end_entity_id }}"
          data:
            date: "{{states(trigger.entity_id) | truncate(10, 'False', '') }}"

    ##########################
    ## System update notifications
    ##########################
    - alias: "Stuur een melding dat er een nieuwe Home Assistant versie is"
      id: system_update_available_notification
      description: Send notification on Home Assistant update available
      triggers:
        - trigger: state
          entity_id: sensor.latest_version
          not_to:
            - "unknown"
            - "unavailable"
            - "none"
      conditions:
        - condition: template
          value_template: >
            {{ states('sensor.latest_version') != states('sensor.current_version') }}
      actions:
        - action: notify.mobile_app_sm_a556b
          data:
            title: Upgrade time!
            message: >
              There is an upgrade for Home Assistant container pending!
              Version {{ states('sensor.latest_version') }} just got released!
            data:
              tag: System
              channel: System
              icon_url: "https://raw.githubusercontent.com/home-assistant/assets/master/logo/logo-pretty.png"
              actions:
                - action: "URI"
                  title: "Open Changelog"
                  uri: "https://github.com/home-assistant/core/releases/tag/{{states('sensor.latest_version')}}"
        - action: persistent_notification.create
          data:
            notification_id: update_pending
            title: Upgrade time!
            message: >
              There is an upgrade for Home Assistant container pending!
              Version {{ states('sensor.latest_version') }} just got released!
              [Changelog](https://github.com/home-assistant/core/releases/tag/{{states('sensor.latest_version')}})

    - alias: "Verwijder de Home Assistant update melding als we HA bijgewerkt hebben"
      id: system_clear_update_available_notification
      description: Clear notification of Home Assistant update available
      triggers:
        - trigger: homeassistant
          event: start
      conditions:
        - condition: template
          value_template: >
            {{ states('sensor.latest_version') == states('sensor.current_version') }}
      actions:
        - action: persistent_notification.dismiss
          data:
            notification_id: update_pending

  script:
    light_group_toggle_helper:
      alias: Light group toggle helper
      description: "System: Turn all lights in a group on or off based on status of the group"
      icon: mdi:lightbulb-group
      mode: single
      max_exceeded: silent
      fields:
        group:
          description: "The light group to turn on or off"
      sequence:
        - condition: "{{ true if group is defined and group != none else false }}"
        - if:
            - "{{ is_state(group, 'on') }}"
          then:
            - action: homeassistant.turn_off
              target:
                entity_id: "{{ group }}"
          else:
            - action: homeassistant.turn_on
              target:
                entity_id: "{{ group }}"
