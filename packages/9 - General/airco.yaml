airco_package:
  input_datetime:
    time_turn_off_airco_livingroom:
      name: Airco woonkamer uit
      has_time: true

  timer:
    airco_mini_sleeptimer:
      name: "Airco sleeptimer mini"
      restore: true
    airco_puber_sleeptimer:
      name: "Airco sleeptimer puber"
      restore: true

  automation:
    ###########################################
    ## Sleeptimer for kids aircos             #
    ###########################################
    - id: airco_kinderen_start_on_timer_start
      alias: "Start de airco van de kinderen als de timer start"
      description: "Turn on the AC when the timer starts"
      triggers:
        - trigger: event
          event_type: timer.started
          event_data:
            entity_id: timer.airco_mini_sleeptimer
          variables:
            airco: climate.airco_slaapkamer_t
            temp_sensor: sensor.xiaomi_temperature_humidity_sensor_3_temperature
        - trigger: event
          event_type: timer.started
          event_data:
            entity_id: timer.airco_puber_sleeptimer
          variables:
            airco: climate.airco_slaapkamer_m
            temp_sensor: sensor.xiaomi_temperature_humidity_sensor_4_temperature
      actions:
        - action: climate.set_hvac_mode
          target:
            entity_id: "{{airco}}"
          data:
            hvac_mode: "{{ 'heat' if (states(temp_sensor) | float(0)) < 21 else 'cool' }}"

    - id: airco_sleeptimer_kinderen
      alias: "Sleeptimer voor de aircos van de kinderen"
      description: "Turn off AC at the end of the timer"
      triggers:
        - trigger: event
          event_type: timer.finished
          event_data:
            entity_id: timer.airco_mini_sleeptimer
          variables:
            entity: climate.airco_slaapkamer_t
        - trigger: event
          event_type: timer.finished
          event_data:
            entity_id: timer.airco_puber_sleeptimer
          variables:
            entity: climate.airco_slaapkamer_m
      actions:
        - action: climate.set_hvac_mode
          target:
            entity_id: "{{entity}}"
          data:
            hvac_mode: "off"

    ###########################################
    ## Automatic shut down of aircos          #
    ###########################################
    - id: airco_automatisch_uit
      alias: "Zet airco automatisch uit einde avond"
      description: "Turn off ACs automatically so we won't forget"
      triggers:
        - trigger: time
          at: "23:00:00"
          variables:
            target: airco_children
        - trigger: time
          at: input_datetime.time_turn_off_airco
          variables:
            target: climate.airco_woonkamer
      actions:
        - choose:
            - conditions: "{{ target == 'airco_children' }}"
              sequence:
                - if:
                    - "{{ states('timer.airco_mini_sleeptimer') != 'active' }}"
                  then:
                    - action: climate.set_hvac_mode
                      target:
                        entity_id: climate.airco_slaapkamer_t
                      data:
                        hvac_mode: "off"
                - if:
                    - "{{ states('timer.airco_puber_sleeptimer') != 'active' }}"
                  then:
                    - action: climate.set_hvac_mode
                      target:
                        entity_id: climate.airco_slaapkamer_m
                      data:
                        hvac_mode: "off"
            - conditions: "{{ target == 'climate.airco_woonkamer' }}"
              sequence:
                - action: climate.set_hvac_mode
                  target:
                    entity_id: "{{target}}"
                  data:
                    hvac_mode: "off"

    - id: turn_off_when_away
      alias: "Zet de airco en verwarming uit als we weg zijn"
      description: "Climate: Turn off heating when away"
      triggers:
        - trigger: state
          entity_id: zone.home
          to: "0"
          for:
            minutes: 30
      actions:
        - alias: "Turn off Tado devices that are on (and leave others in current state)"
          action: climate.set_hvac_mode
          data:
            hvac_mode: auto
          target:
            entity_id: "{{ integration_entities('tado') | select('is_state', 'heat') | list }}"
        - alias: "Turn off A/Cs"
          action: climate.set_hvac_mode
          data:
            hvac_mode: "off"
          target:
            entity_id:
              - climate.airco_master_bedroom
              - climate.airco_slaapkamer_m
              - climate.airco_slaapkamer_t
              - climate.airco_woonkamer

    ###########################################
    ## Limit setpoint of kids aircos     #
    ###########################################
    - id: airco_kinderen_limit_setpoint
      alias: "Zet airco kinderen automatisch op een normale temperatuur"
      description: "Set the kid's AC automatically to a more normal temperature (to prevent user error and save energy)"
      triggers:
        - trigger: state
          entity_id:
            - climate.airco_slaapkamer_m
            - climate.airco_slaapkamer_t
          attribute: temperature
      variables:
        current_mode: "{{ states(trigger.entity_id) }}"
        set_temp: "{{ state_attr(trigger.entity_id, 'temperature') | float(0) }}"
      condition: []
      actions:
        - choose:
            - conditions: "{{ current_mode in ['cool', 'dry'] and set_temp < 20 }}"
              sequence:
                - action: climate.set_temperature
                  target:
                    entity_id: "{{ trigger.entity_id }}"
                  data:
                    temperature: 22
            - conditions: "{{ current_mode == 'heat' and set_temp > 21 }}"
              sequence:
                - action: climate.set_temperature
                  target:
                    entity_id: "{{ trigger.entity_id }}"
                  data:
                    temperature: 19.5
