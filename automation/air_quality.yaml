##################################
## Push values to Air Quality APIs
##################################
# Sensor uses a NodeMCUv2 and SDS011+BME280 sensors. NodeMCU is flashed with ESPHome
# software. SDS011 updates every 30 mins, the BME280 every 5 minutes. As all BME280
# sensors update at the same time, we only need to monitor one sensor to trigger
# the automation. Temperature is the sensor that changes most often.
- id: weerhuisje_update_air_quality_sensors
  alias: "Weerhuisje: Update Air Quality Sensors"
  initial_state: true
  mode: queued
  trigger: # Trigger on every update of the temperature
    platform: state
    entity_id: sensor.bme280_temperature
  condition:
    condition: not
    conditions:
      - "{{ is_state('sensor.particulate_matter_2_5um_concentration', 'unavailable') }}"
      - "{{ is_state('sensor.particulate_matter_10_0um_concentration', 'unavailable') }}"
      - "{{ is_state('sensor.particulate_matter_2_5um_concentration', 'unknown') }}"
      - "{{ is_state('sensor.particulate_matter_10_0um_concentration', 'unknown') }}"
      - "{{ is_state('sensor.bme280_temperature', 'unavailable') }}"
      - "{{ is_state('sensor.bme280_humidity', 'unavailable') }}"
      - "{{ is_state('sensor.bme280_pressure', 'unavailable') }}"
  action:
    ## Send data to OpenSenseMap.
    - service: rest_command.post_opensensebox
    ## Send updates to Madavi.de for statistics.
    - service: rest_command.send_madavi
    ## Send to Luftdaten / Sensor.Community API
    ## Split over two calls as the headers differ
    - service: rest_command.send_luftdaten_tph
    - service: rest_command.send_luftdaten_pm
