####################
# Batterij           #
####################
path: batterij
title: Batterijen
icon: mdi:battery-medium
cards:
  - type: vertical-stack
    cards:
      - type: markdown ## Batterij niveaus header
        content: |
          # Batterij niveaus
        card_mod:
          style:
            .: |
              ha-card {
              margin: 12px 14px -5px 14px;
              box-shadow: none;
              --ha-card-background: rgba(0, 0, 0, 0.0)
              }
            ha-markdown$: |
              h1 { 
                font-size: 18px !important;
                font-weight: 400 !important;
                padding-left: 10px !important;
                border-left: 3px solid rgba(81, 134, 236);
                }
      - type: custom:battery-state-card
        secondary_info: "{attributes.battery_type_and_quantity}"
        round: 0
        filter:
          include:
            - name: entity_id
              value: "*_battery_plus"
        bulk_rename:
          - from: "Batterij+"
        sort:
          - state

  - type: markdown
    title: Battery Summary
    content: >
      {% set ns_batteries = namespace(batteries={}) %}

      {% for entity_id in integration_entities('battery_notes') if entity_id is
      search('_battery_type$', ignorecase=False) -%}
          {% set battery_type = states[entity_id].state %}
          {% set battery_split = battery_type.split('Ã—') %}
          {% if battery_split | length > 1 %}
            {% set battery_type = battery_split[-1] | trim %}
            {% set battery_count = battery_split[0] | int(1) %}
          {% else %}
            {% set battery_count = 1 %}
          {% endif %}
          {% if battery_type not in ns_batteries.batteries %}
              {% set ns_batteries.batteries = dict(ns_batteries.batteries, **{battery_type: battery_count}) %}
            {% else %}
              {% set ns_batteries.batteries = dict(ns_batteries.batteries, **{battery_type: ns_batteries.batteries[battery_type] + battery_count}) %}
          {% endif %}
      {% endfor %}


      | Type | Count |

      | :-- | --: |

      {% for bt in ns_batteries.batteries | dictsort(False, 'value') | reverse -%}
        | {{ bt[0] }} | {{ [bt][0][1] }} |
      {% endfor %}
    card_mod:
      style:
        ha-markdown$: >
          table { width: 100%; border-collapse: separate; border-spacing: 0px; }
          tbody tr:nth-child(2n+1) { background-color:
          var(--table-row-background-color); } thead tr th, tbody tr td {padding:
          4px 10px; }
