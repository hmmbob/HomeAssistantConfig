##########################
## System sensors
##########################
- platform: version
- platform: version
  source: docker

##########################
## Weather sensors
##########################
- platform: darksky
  api_key: !secret darksky_api
  forecast:
    - 0
    - 1
    - 2
  hourly_forecast:
    - 0
    - 1
    - 2
    - 3
  monitored_conditions:
    - cloud_cover
    - uv_index
  scan_interval:
    minutes: 15

- platform: template
  sensors:
    outside_temperature:
      entity_id:  weather.dark_sky
      friendly_name: 'Buitentemperatuur'
      unit_of_measurement: '°C'
      value_template: >
          {%- if states.weather.dark_sky.attributes.temperature is defined %}
              {{ state_attr('weather.dark_sky', 'temperature') }}
          {% else %}
              0
          {%- endif %}
    outside_humidity:
      entity_id:  weather.dark_sky
      friendly_name: 'Luchtvochtigheid'
      unit_of_measurement: '%'
      value_template: >
          {%- if states.weather.dark_sky.attributes.humidity is defined %}
              {{ state_attr('weather.dark_sky', 'humidity') }}
          {% else %}
              0
          {%- endif %}
    room_temperature:
      entity_id: climate.woonkamer
      friendly_name: 'Kamertemperatuur'
      unit_of_measurement: '°C'
      value_template: >
          {%- if states.climate.woonkamer.attributes.current_temperature is defined %}
              {{ state_attr('climate.woonkamer', 'current_temperature') }}
          {% else %}
              0
          {%- endif %}

##########################
## Toon sensors
##########################
- platform: toon_smartmeter
  host: !secret toon_host
  scan_interval: 15
  resources:
    - elecusageflowlow
    - elecusagecntlow
    - elecusageflowhigh
    - elecusagecnthigh
#    - gasused
#    - gasusedcnt

##########################
## Waze sensors
##########################
- platform: waze_travel_time
  name: Reistijd Bob naar huis
  origin: device_tracker.sm_a505fn
  destination: zone.home
  region: 'EU'
  scan_interval: 1800

#- platform: waze_travel_time      ## Not being used in COVID-19 times, 
#  name: Reistijd Thuis-Werk       ## commented out because I don't need the updates now
#  origin: zone.home
#  destination: zone.work
#  region: 'EU'
#  scan_interval: 1800
#
#- platform: waze_travel_time
#  name: Reistijd Werk-Thuis
#  origin: zone.work
#  destination: zone.home
#  region: 'EU'
#  scan_interval: 1800

##########################
## Gas prices sensors
##########################
- platform: scrape
  resource: !secret scrape_url_z
  name: 'Diesel Z'
  select: ".field--name-field-station-prices .taxonomy-term-Diesel .field--name-field-prices-price-pump"
  value_template: "{{ value | replace('€', '') | replace('EUR/L', '') | float | round(3) }}"
  unit_of_measurement: €
  scan_interval: 3600

- platform: scrape
  resource: !secret scrape_url_z
  name: 'Benzine Z'
  select: ".field--name-field-station-prices .taxonomy-term-Euro95 .field--name-field-prices-price-pump"
  value_template: "{{ value | replace('€', '') | replace('EUR/L', '') | float | round(3) }}"
  unit_of_measurement: €
  scan_interval: 3600

- platform: scrape
  resource: !secret scrape_url_u
  name: 'Diesel U'
  select: ".field--name-field-station-prices .taxonomy-term-Diesel .field--name-field-prices-price-pump"
  value_template: "{{ value | replace('€', '') | replace('EUR/L', '') | float | round(3) }}"
  unit_of_measurement: €
  scan_interval: 3600

- platform: scrape
  resource: !secret scrape_url_u
  name: 'Benzine U'
  select: ".field--name-field-station-prices .taxonomy-term-Euro95 .field--name-field-prices-price-pump"
  value_template: "{{ value | replace('€', '') | replace('EUR/L', '') | float | round(3) }}"
  unit_of_measurement: €
  scan_interval: 3600

##########################
## Trash sensors
##########################
- platform: rest
  resource: !secret scrape_url_afval
  name: Trash_Today
  scan_interval: 3600
  value_template: >
    {% set now = as_timestamp(now()) %}
    {% set today = now | timestamp_custom("%d/%m/%Y") %}
    {% set containerType = value_json.days[ today ] %}
    {% if containerType | trim != "" %}
      {% set trash = value_json.legend[ containerType ] %}
      {{ trash }}
    {% else %}
      Geen
    {% endif %}
- platform: rest
  resource: !secret scrape_url_afval
  name: Trash_Tomorrow
  scan_interval: 3600
  value_template: >
    {% set now = as_timestamp(now()) %}
    {% set oneDay = 86400 %}
    {% set nextDay = now + oneDay %}
    {% set tomorrow = nextDay | timestamp_custom("%d/%m/%Y") %}
    {% set containerType = value_json.days[ tomorrow ] %}
    {% if containerType | trim != "" %}
      {% set trash = value_json.legend[ containerType ] %}
      {{ trash }}
    {% else %}
      Geen
    {% endif %}

##########################
## ZWave status sensors
##########################
# Sensor for monitoring the bridge state
- platform: mqtt
  unique_id: openzwave_bridge
  name: OpenZWave Bridge
  state_topic: "OpenZWave/1/status/"
  value_template: "{{ value_json.Status }}"
  json_attributes_topic: "OpenZWave/1/status/"
  payload_not_available: "Offline"

##########################
## Luftdaten sensors local
##########################
#- platform: command_line
#  name: "Luftdata PM10"
#  command: !secret luftdaten_local_url
#  value_template: "{{ value_json.sensordatavalues[0].value | round(2) }}"
#  unit_of_measurement: "µg/m³"
#- platform: command_line
#  name: "Luftdata PM2.5"
#  command: !secret luftdaten_local_url
#  value_template: "{{ value_json.sensordatavalues[1].value | round(2) }}"
#  unit_of_measurement: "µg/m³"
#- platform: command_line
#  name: "Luftdata Temperature BME280"
#  command: !secret luftdaten_local_url
#  value_template: "{{ value_json.sensordatavalues[2].value | round(1) }}"
#  unit_of_measurement: "°C"
#- platform: command_line
#  name: "Luftdata Pressure BME280"
#  command: !secret luftdaten_local_url
#  value_template: "{{ value_json.sensordatavalues[3].value  | int(1) }}"
#  unit_of_measurement: "mbar"
#- platform: command_line
#  name: "Luftdata Humidity BME280"
#  command: !secret luftdaten_local_url
#  value_template: "{{ value_json.sensordatavalues[4].value | round(1) }}"
#  unit_of_measurement: "%"
#
#- platform: statistics
#  name: pm10 stats
#  entity_id: sensor.luftdata_pm10
#  max_age:
#    minutes: 60
#- platform: statistics
#  name: pm25 stats
#  entity_id: sensor.luftdata_pm25
#  max_age:
#    minutes: 60
#
#- platform: template
#  sensors:
#    air_quality_pm10:
#      friendly_name: 'Air quality PM10'
#      value_template: >-
#        {%if states.sensor.pm10_stats_mean.state | float<=25 %}EXCELLENT
#        {% elif sensor.pm10_stats_mean.state | float<=50 | float>25 %}GOOD
#        {% elif sensor.pm10_stats_mean.state | float<=90 | float>25 %}FAIR
#        {% elif sensor.pm10_stats_mean.state | float<=180 | float>90 %}INFERIOR
#        {% elif sensor.pm10_stats_mean.state | float>180 %}POOR
#        {%- endif %}
#- platform: template
#  sensors:
#    air_quality_pm25:
#      friendly_name: 'Air quality PM2.5'
#      value_template: >-
#        {%if states.sensor.pm25_stats_mean.state | float<=15 %}EXCELLENT
#        {% elif sensor.pm25_stats_mean.state | float<=30 | float>15 %}GOOD
#        {% elif sensor.pm25_stats_mean.state | float<=55 | float>30 %}FAIR
#        {% elif sensor.pm25_stats_mean.state | float<=110 | float>55 %}INFERIOR
#        {% elif sensor.pm25_stats_mean.state | float>110 %}POOR
#        {%- endif %}