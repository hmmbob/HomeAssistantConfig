##############################
## Freezer door alert helper #
##############################
- trigger:
    - platform: state
      entity_id:
        - binary_sensor.door_sensor_1_contact
        - input_boolean.notify_door_alert
  binary_sensor:
    - name: "Alert Freezer Door"
      unique_id: alert_freezer_door
      delay_on: "00:05:00"
      state: >-
        {{ is_state('binary_sensor.door_sensor_1_contact', 'on')
          and is_state('input_boolean.notify_door_alert', 'on') }}

##############################
## Front door alert helper   #
##############################
- trigger:
    - platform: state
      entity_id:
        - binary_sensor.door_sensor_2_contact
        - input_boolean.notify_door_alert
  binary_sensor:
    - name: "Alert Front Door"
      unique_id: alert_front_door
      delay_on: "00:05:00"
      state: >-
        {{ is_state('binary_sensor.door_sensor_2_contact', 'on')
          and is_state('input_boolean.notify_door_alert', 'on') }}

##############################
## Night template sensors   #
##############################
- sensor:
    - name: "Nightstate"
      state: "{% if is_state('sun.sun', 'below_horizon') %}1{% else %}0{% endif %}"

##############################
## Room temperature          #
##############################
- sensor:
    - name: "Kamertemperatuur"
      unit_of_measurement: "Â°C"
      state: "{{ state_attr('climate.woonkamer', 'current_temperature')}}"
      device_class: temperature

##############################
## UV Alert helper           #
##############################
- binary_sensor:
    - name: "UV index Warning level"
      unique_id: "uv_index_warning_level"
      state: "{{ states('sensor.dark_sky_uv_index')| float > 5.9 }}"

##############################
## Vacuum template sensors   #
##############################
- sensor:
    - name: "Vacuum status"
      unique_id: "vacuum_status"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "status") }}'
      icon: mdi:list-status

    - name: "Vacuum error"
      unique_id: "vacuum_error"
      icon: mdi:alert-circle
      state: >-
        {% if states("vacuum.roborock_vacuum_s5e") == "error" %}
          {{ state_attr("vacuum.roborock_vacuum_s5e", "error") }}
        {% else %}
          No error
        {% endif %}

    - name: "Vacuum current cleaning time"
      unique_id: "vacuum_current_cleaning_time"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "cleaning_time") }}'
      icon: mdi:history
      unit_of_measurement: "min"

    - name: "Vacuum current cleaned area"
      unique_id: "vacuum_current_cleaned_area"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "cleaned_area") }}'
      icon: mdi:texture-box
      unit_of_measurement: "m2"

    - name: "Vacuum total cleaned area"
      unique_id: "vacuum_total_cleaned_area"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "total_cleaned_area") }}'
      icon: mdi:texture-box
      unit_of_measurement: "m2"

    - name: "Vacuum total cleaning count"
      unique_id: "vacuum_total_cleaning_count"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "cleaning_count") }}'
      icon: mdi:history
      unit_of_measurement: "x"

    - name: "Vacuum total cleaning time"
      unique_id: "vacuum_total_cleaning_time"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "total_cleaning_time")  | int // 60 }}'
      icon: mdi:av-timer
      unit_of_measurement: "uur"

    - name: "Vacuum main brush left"
      unique_id: "vacuum_main_brush_left"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "main_brush_left") }}'
      icon: mdi:broom
      unit_of_measurement: "uur"

    - name: "Vacuum side brush left"
      unique_id: "vacuum_side_brush_left"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "side_brush_left") }}'
      icon: mdi:pinwheel
      unit_of_measurement: "uur"

    - name: "Vacuum filter left"
      unique_id: "vacuum_filter_left"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "filter_left") }}'
      icon: mdi:air-filter
      unit_of_measurement: "uur"

    - name: "Vacuum sensor dirty left"
      unique_id: "vacuum_sensor_dirty_left"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "sensor_dirty_left") }}'
      icon: mdi:eye
      unit_of_measurement: "uur"

    - name: "Vacuum clean start time"
      unique_id: "vacuum_clean_start_time"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "clean_start")}}'
      icon: mdi:clock-start
      device_class: timestamp

    - name: "Vacuum clean stop time"
      unique_id: "vacuum_clean_stop_time"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "clean_stop") }}'
      icon: mdi:timer-off-outline
      device_class: timestamp

    - name: "Vacuum vmop attached"
      unique_id: "vacuum_vmop_attached"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "mop_attached") }}'
      icon: mdi:pail

    - name: "Vacuum battery"
      unique_id: "vacuum_battery"
      state: '{{ state_attr("vacuum.roborock_vacuum_s5e", "battery_level") }}'
      device_class: "battery"
      unit_of_measurement: "%"
      icon: >-
        {% set battery_level = states('sensor.vacuum_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
          mdi:battery-unknown
        {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
        {% endif %}
